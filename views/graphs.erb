<%= erb :menu %>

<div class="pure-g-r">
  <div class="pure-u-1" id="insulin">
    <h2>Insulin - Scatter Chart</h2>
    <svg></svg>
  </div>
</div>

<div class="pure-g-r">
  <div class="pure-u-1" id="scatter">
    <h2>Blood sugar - Scatter Chart</h2>
    <svg></svg>
  </div>
</div>

<div class="pure-g-r">
  <div class="pure-u-1" id="line">
    <h2>Blood sugar - Line Chart</h2>
    <svg></svg>
  </div>
</div>

<script src="js/d3.v2.js"></script>
<script src="js/nv.d3.min.js"></script>
<script>
  nv.addGraph(function() {
    var chart = nv.models.scatterChart()
      .showDistX(true)
      .showDistY(true)
      .useVoronoi(true)
      .color(d3.scale.category10().range());

    chart.xAxis.tickFormat(function(d) {
      return d3.time.format('%A %d/%m/%y %H:%M')(new Date(d * 1000))
    })
    chart.yAxis.tickFormat(d3.format('.i'))

    d3.select('#insulin svg')
      .datum(insulin())
      .transition().duration(500)
      .call(chart);

    nv.utils.windowResize(chart.update);

    chart.dispatch.on('stateChange', function(e) {
      nv.log('New State:', JSON.stringify(e));
    });

    return chart;
  });
  nv.addGraph(function() {
    var chart = nv.models.scatterChart()
      .showDistX(true)
      .showDistY(true)
      .useVoronoi(true)
      .color(d3.scale.category10().range());

    chart.xAxis.tickFormat(function(d) {
      return d3.time.format('%A %d/%m/%y %H:%M')(new Date(d * 1000))
    })
    chart.yAxis.tickFormat(d3.format('.i'))

    d3.select('#scatter svg')
      .datum(data())
      .transition().duration(500)
      .call(chart);

    nv.utils.windowResize(chart.update);

    chart.dispatch.on('stateChange', function(e) {
      nv.log('New State:', JSON.stringify(e));
    });

    return chart;
  });

  nv.addGraph(function() {
    var chart = nv.models.lineWithFocusChart();

    chart.xAxis.tickFormat(function(d) {
      return d3.time.format('%A %d/%m/%y %H:%M')(new Date(d * 1000))
    })
    chart.x2Axis.tickFormat(function(d) {
      return d3.time.format('%A %d/%m/%y %H:%M')(new Date(d * 1000))
    })

    chart.yAxis
        .tickFormat(d3.format('.i'));
    chart.y2Axis
        .tickFormat(d3.format('.i'));

    d3.select('#line svg')
        .datum(data())
      .transition().duration(500)
        .call(chart);

    nv.utils.windowResize(chart.update);

    return chart;
  });

  function data() {
    return <%= data %>;
  };

  function insulin() {
    return <%= insulin %>;
  };
</script>
